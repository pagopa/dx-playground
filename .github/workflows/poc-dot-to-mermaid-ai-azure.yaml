name: Convert dot to Mermaid with Azure AI

on:
  workflow_dispatch:
    inputs:
      api_key:
        description: 'Azure OpenAI API Key'
        required: true
  push:
    branches:
      - feat-poc-ai-graph-generation

jobs:
  dot-to-mermaid:
    runs-on: ubuntu-latest
    permissions:
      models: read
      contents: read
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4

      - name: Generate Prompt
        run: |
          cat > prompt.txt <<EOF
          You are an expert in converting Terraform-generated Graphviz DOT diagrams into clear, human-friendly Mermaid diagrams.

          Requirements:
          0. **Wrap the entire output** inside a Markdown code fence with `mermaid`, exactly like this:
          \`\`\`mermaid
          …the entire diagram…
          \`\`\`
          1. **Output only valid Mermaid syntax** (no prose).
          2. **Orientation**: Use \`graph LR\` (left-to-right).
          3. **Subgraphs**: Group nodes into logical clusters with meaningful titles. Each subgraph block must be in the form:
            subgraph Group Title
              NodeA[“Label A”]
              NodeB[“Label B”]
            end
          4. **Naming**:  
            - Strip Terraform resource prefixes (\`azurerm_\`, \`data.\`) and use title-case labels (e.g. \`Key Vault Certificate\`, \`API Management Service\`).  
            - For DNS entries, include both zone and record type (\`A Record - apim.azure-api.net\`) if present.
          5. **Connections**:  
            - Draw arrows only once per relationship.  
            - Label edges only if it adds clarity (otherwise omit labels).
          6. **Clean Up**:  
            - Remove any standalone “management lock” or “diagnostic” nodes that don’t have outgoing or incoming edges—unless they’re essential.  
            - Collapse any trivial one-node subgraphs into their parent group.

          Here is the original DOT code:
          \`\`\`dot
          $(cat ./infra/resources/dev/graph.dot)
          \`\`\`
          EOF

          cat prompt.txt

      - name: Run AI call API
        id: inference
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AZURE_API_KEY: ${{ inputs.api_key }}
        run: |
          curl -X POST "https://dx-d-sdc-test-aif-01.cognitiveservices.azure.com/openai/deployments/o4-mini/chat/completions?api-version=2025-01-01-preview \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $AZURE_API_KEY" \
              -d '{
                  "messages": [
                      {
                          "role": "user",
                          "content": "${cat prompt.txt}"
                      }
                  ],
                  "max_completion_tokens": 100000,
                  "model": "o4-mini"
              }' > response.txt

      - name: Use Response File
        run: |
          echo "Response saved to: response.txt"
          cat "response.txt"

      - name: Upload Artifact
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        with:
          name: "bundle-mermaid"
          path: response.txt
          if-no-files-found: error
          retention-days: 7