name: Convert Dot to Mermaid with Inference - PR

on:
  pull_request:
    types:
      - opened
      - synchronize
    # paths:
    #   - '**/graph.dot'
  workflow_dispatch:
  push:
    branches:
      - feat-poc-ai-graph-generation

jobs:
  find-changed-dots:
    runs-on: ubuntu-latest
    outputs:
      changed_files: ${{ steps.changed-files.outputs.all_changed_files }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Find changed .dot files
        id: changed-files
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46
        with:
          files: '**/graph.dot'
          base_sha: main

  dot-to-mermaid:
    needs: find-changed-dots
    if: ${{ needs.find-changed-dots.outputs.changed_files != '[]' && needs.find-changed-dots.outputs.changed_files != '' }}
    
    runs-on: ubuntu-latest
    permissions:
      models: read
      contents: write
      pull-requests: write

    strategy:
      matrix:
        dot_file: ${{ fromJson(needs.find-changed-dots.outputs.changed_files) }}

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Generate Prompt for ${{ matrix.dot_file }}
        id: generate_prompt
        run: |
          PROMPT_FILE="prompt-$(echo "${{ matrix.dot_file }}" | tr '/' '-').txt"
          
          cat > "$PROMPT_FILE" <<EOF
          You are an expert in converting Terraform-generated Graphviz DOT diagrams into clear, human-friendly Mermaid diagrams.

          Requirements:
          0. **Wrap the entire output** inside a Markdown code fence with `mermaid`, exactly like this:
          \`\`\`mermaid
          …the entire diagram…
          \`\`\`
          1. **Output only valid Mermaid syntax** (no prose).
          2. **Orientation**: Use \`graph LR\` (left-to-right).
          3. **Subgraphs**: Group nodes into logical clusters with meaningful titles. Each subgraph block must be in the form:
            subgraph Group Title
              NodeA[“Label A”]
              NodeB[“Label B”]
            end
          4. **Naming**:  
            - Strip Terraform resource prefixes (\`azurerm_\`, \`data.\`) and use title-case labels (e.g. \`Key Vault Certificate\`, \`API Management Service\`).  
            - For DNS entries, include both zone and record type (\`A Record - apim.azure-api.net\`) if present.
          5. **Connections**:  
            - Draw arrows only once per relationship.  
            - Label edges only if it adds clarity (otherwise omit labels).
          6. **Clean Up**:  
            - Remove any standalone “management lock” or “diagnostic” nodes that don’t have outgoing or incoming edges—unless they’re essential.  
            - Collapse any trivial one-node subgraphs into their parent group.

          Here is the original DOT code:
          \`\`\`dot
          $(cat ./${{ matrix.dot_file }})
          \`\`\`
          EOF

          echo "Prompt file created at $PROMPT_FILE"
          echo "prompt_path=$PROMPT_FILE" >> $GITHUB_OUTPUT

      - name: Verify Models permission via a ping
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          STATUS=$(
            curl -o /dev/null -s -w "%{http_code}" \
              -X POST \
              -H "Authorization: Bearer $GITHUB_TOKEN" \
              -H "Content-Type: application/json" \
              -d '{"model":"openai/gpt-4o","messages":[{"role":"user","content":"Ping"}]}' \
              https://models.github.ai/inference/chat/completions
          )
          echo "Inference ping returned HTTP $STATUS"
          if [ "$STATUS" -ne 200 ]; then
            echo "🚨 models:read permission is missing or AI is not enabled"
            exit 1
          fi

      - name: Run AI Inference
        id: inference
        uses: actions/ai-inference@v1.1.0
        with:
          prompt-file: ${{ steps.generate_prompt.outputs.prompt_path }}
          max-tokens: 4096
          model: openai/gpt-4o
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Mermaid file from response
        id: create_md
        run: |
          DOT_DIR=$(dirname "${{ matrix.dot_file }}")
          MD_FILE_PATH="$DOT_DIR/graph.md"
          
          echo "AI Response saved to: ${{ steps.inference.outputs.response-file }}"
          
          mv "${{ steps.inference.outputs.response-file }}" "$MD_FILE_PATH"
          
          echo "Mermaid file created at: $MD_FILE_PATH"
          echo "md_file_path=$MD_FILE_PATH" >> $GITHUB_OUTPUT

      # - name: Commit and push graph.md
      #   uses: stefanzweifel/git-auto-commit-action@778341af668090896ca464160c2def5d1d1a3eb0 #v6
      #   with:
      #     commit_message: "docs: ✨ Generate Mermaid diagram for ${{ matrix.dot_file }}"
      #     file_pattern: "${{ steps.create_md.outputs.md_file_path }}"
      #     commit_user_name: "dx-pagopa-bot"
      #     commit_user_email: "dx-pagopa-github-bot@pagopa.it"
      #     commit_author: "dx-pagopa-bo <dx-pagopa-github-bot@pagopa.it>"