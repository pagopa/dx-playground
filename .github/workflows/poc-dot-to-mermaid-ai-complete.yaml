name: Convert Dot to Mermaid with Inference - PR

on:
  pull_request:
    types:
      - opened
      - synchronize
    # paths:
    #   - '**/graph.dot' # Uncomment to trigger only on changes to graph.dot files
  workflow_dispatch:
  push:
    branches:
      - feat-poc-ai-graph-generation

jobs:
  find-changed-dots:
    runs-on: ubuntu-latest
    outputs:
      changed_files: ${{ steps.changed-files.outputs.all_changed_files }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Find changed .dot files
        id: changed-files
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46
        with:
          files: '**/graph.dot'
          base_sha: 'main' # REMOVE (normally compare PR branch latest two commits)
          sha: feat-poc-ai-graph-generation # REMOVE (this is the branch where the PR is opened, now specified ti permit workflow_dispatch)
          matrix: true
      
      - name: Test print
        run: |
          echo "Changed files: ${{ steps.changed-files.outputs.all_changed_files }}"

  dot-to-mermaid:
    needs: find-changed-dots
    if: ${{ needs.find-changed-dots.outputs.changed_files != '[]' && needs.find-changed-dots.outputs.changed_files != '' }}
    
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    strategy:
      matrix:
        dot_file: ${{ fromJson(needs.find-changed-dots.outputs.changed_files) }}

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Generate Prompt for ${{ matrix.dot_file }}
        id: generate_prompt
        run: |
          PROMPT_FILE="prompt-$(echo "${{ matrix.dot_file }}" | tr '/' '-').txt"
          
          cat > "$PROMPT_FILE" <<EOF
          You are an expert in converting Terraform-generated Graphviz DOT diagrams into clear, human-friendly Mermaid diagrams.

          Requirements:
          0. **Wrap the entire output** inside a Markdown code fence with `mermaid`, exactly like this:
          \`\`\`mermaid
          …the entire diagram…
          \`\`\`
          1. **Output only valid Mermaid syntax** (no prose).
          2. **Orientation**: Use \`graph LR\` (left-to-right).
          3. **Subgraphs**: Group nodes into logical clusters with meaningful titles. Each subgraph block must be in the form:
            subgraph Group Title
              NodeA[“Label A”]
              NodeB[“Label B”]
            end
          4. **Naming**:  
            - Strip Terraform resource prefixes (\`azurerm_\`, \`data.\`) and use title-case labels (e.g. \`Key Vault Certificate\`, \`API Management Service\`).  
            - For DNS entries, include both zone and record type (\`A Record - apim.azure-api.net\`) if present.
          5. **Connections**:  
            - Draw arrows only once per relationship.  
            - Label edges only if it adds clarity (otherwise omit labels).
          6. **Clean Up**:  
            - Remove any standalone “management lock” or “diagnostic” nodes that don’t have outgoing or incoming edges—unless they’re essential.  
            - Collapse any trivial one-node subgraphs into their parent group.

          Here is the original DOT code:
          \`\`\`dot
          $(cat ./${{ matrix.dot_file }})
          \`\`\`
          EOF

          echo "Prompt file created at $PROMPT_FILE"
          echo "prompt_path=$PROMPT_FILE" >> $GITHUB_OUTPUT

      - name: Prepare JSON Payload
        id: prepare_json
        run: |
          JSON_FILE="payload-$(echo "${{ matrix.dot_file }}" | tr '/' '-').json"
          jq -n \
            --arg content "$(cat ${{ steps.generate_prompt.outputs.prompt_path }})" \
            '{
              "messages": [
                {
                  "role": "user",
                  "content": $content
                }
              ],
              "max_completion_tokens": 100000,
              "model": "o4-mini"
            }' > "$JSON_FILE"

          echo "JSON payload created at $JSON_FILE"
          echo "json_payload_path=$JSON_FILE" >> $GITHUB_OUTPUT

      - name: Run AI call API for ${{ matrix.dot_file }}
        id: ai_call
        env:
          AZURE_API_KEY: ${{ secrets.AZURE_AI_API_KEY }}
        run: |
          RESPONSE_FILE="response-$(echo "${{ matrix.dot_file }}" | tr '/' '-').json"
          DOT_DIR=$(dirname "${{ matrix.dot_file }}")
          ENCODED_NAME=$(echo "$DOT_DIR" | tr '/' '-')
          MD_FILE_PATH="${ENCODED_NAME}.md"

          curl -s -X POST "https://dx-d-sdc-test-aif-01.cognitiveservices.azure.com/openai/deployments/o4-mini/chat/completions?api-version=2025-01-01-preview" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $AZURE_API_KEY" \
            -d @${{ steps.prepare_json.outputs.json_payload_path }} \
            -o "$RESPONSE_FILE"

          jq -r '.choices[0].message.content' "$RESPONSE_FILE" > "$MD_FILE_PATH"

          echo "Mermaid file created at: $MD_FILE_PATH"
          echo "md_file_path=$MD_FILE_PATH" >> $GITHUB_OUTPUT

      - name: Upload generated diagrams
        uses: actions/upload-artifact@v4
        with:
          name: diagram-${{ strategy.job-index }}
          path: ${{ steps.ai_call.outputs.md_file_path }}
          if-no-files-found: error
    
  commit-changes:
    runs-on: ubuntu-latest
    needs: dot-to-mermaid
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Download generated diagrams
        uses: actions/download-artifact@v4
        with:
          path: downloaded-artifacts

      - name: Organize downloaded files
        run: |
          echo "Organizing downloaded files..."
          for filepath in downloaded-artifacts/*/*.md; do
            if [ -f "$filepath" ]; then
              filename=$(basename "$filepath")
              dir_encoded_name="${filename%.md}"
              dest_dir=$(echo "$dir_encoded_name" | tr '-' '/')
              
              mv "$filepath" "$dest_dir/graph.md"
              
              echo "Moved $filename to $dest_dir/graph.md"
            fi
          done
          echo "Files organized."

      - name: Commit and push all graph.md files
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "docs: ✨ Generate Mermaid diagrams from all .dot files"
          file_pattern: '**/graph.md'
          commit_user_name: "dx-pagopa-bot"
          commit_user_email: "dx-pagopa-github-bot@pagopa.it"
          commit_author: "dx-pagopa-bot <dx-pagopa-github-bot@pagopa.it>"