name: Release Candidate

on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release-candidate:
    if: ${{ github.event.issue.pull_request && startsWith(github.event.comment.body, '/test') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # https://github.com/actions/checkout/issues/1471#issuecomment-1771231294
          fetch-tags: true
          fetch-depth: 0
          token: ${{ secrets.GH_BOT_PAT }}

      # Corepack is an official tool by Node.js that manages package managers versions
      - name: Setup yarn
        run: corepack enable

      - name: Setup Node.js environment
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          node-version-file: ".node-version"
          cache: "yarn"

      - name: Install dependencies
        run: yarn

      - name: Configure Git user
        run: |
          git config --global user.email "dx-pagopa-github-bot@pagopa.it"
          git config --global user.name "dx-pagopa-bot"

      - name: Enter in pre-release mode
        run: yarn changeset pre enter rc # at the moment we hardcode rc

      - name: Version packages
        run: yarn run version

      - name: Commit pre.json and version changes
        run: |
          git add .changeset/pre.json packages/*/package.json
          git commit -m "Version packages" || echo "No changes to commit"

      - name: Publish packages
        run: yarn run release

      - name: Push changes and tags
        run: git push --follow-tags
        env:
          GITHUB_TOKEN: ${{ secrets.GH_BOT_PAT }}

      - name: Exit pre-release mode
        run: yarn changeset pre exit

      - name: Generate PR comment content
        id: generate-comment
        run: |
          echo 'RELEASED_PACKAGES<<EOF' >> $GITHUB_OUTPUT
          echo "New artifacts version:" >> $GITHUB_OUTPUT
          jq -r '.releases[] | "- \(.name)@\(.newVersion)"' changeset-release-info.json >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Comment on PR
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `${env.RELEASED_PACKAGES}`
            })
        env:
          RELEASED_PACKAGES: ${{ steps.generate-comment.outputs.RELEASED_PACKAGES }}

