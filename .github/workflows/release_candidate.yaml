name: Release a candidate version

on:
  workflow_call:
    secrets:
      github-token:
        description: 'A token passed from the caller workflow'
        required: true
      npm-token:
        description: "The npm token to use to publish the packages"
        required: true

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  candidate_release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # https://github.com/actions/checkout/issues/1471#issuecomment-1771231294
          fetch-tags: true
          fetch-depth: 0
          token: ${{ secrets.github-token }}

      # Corepack is an official tool by Node.js that manages package managers versions
      - name: Setup yarn
        run: corepack enable

      - name: Setup Node.js environment
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: ".node-version"
          cache: "yarn"

      - name: Install dependencies
        run: yarn

      - name: Configure Git user
        run: |
          git config --global user.email "dx-pagopa-github-bot@pagopa.it"
          git config --global user.name "dx-pagopa-bot"

      - name: Generate pre-release version
        id: check_pre_state
        env:
          BRANCH_NAME: ${{ github.ref_name }}
          NPM_TOKEN: ${{ secrets.npm-token }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ env.NPM_TOKEN }}" > ~/.npmrc
          # If pre.json does not exist or it is in "exit" mode
          if [ ! -f ".changeset/pre.json" ] || [ "$(jq -r ".mode" .changeset/pre.json)" = "exit" ]; then
            echo "Enter the pre-release mode"
            yarn dlx @changesets/cli pre enter beta

            # Create pre-release versions (update CHANGELOG and package.json files)
            yarn dlx @changesets/cli version

            # Ensure the pre.json is pushed to the repository
            echo "Pushing pre-release state..."
            git add .
            git commit -m "Enter pre-release mode and version packages"

            echo "Publishing pre-release packages..."
            yarn dlx @changesets/cli publish

            echo "Exiting pre-release mode"
            yarn dlx @changesets/cli pre exit
            git add .
            git commit -m "Exit prerelease mode"
            git push origin HEAD:${{ env.BRANCH_NAME }} --follow-tags
          else
            echo "::warning::Already in pre-release mode"
            exit 1
          fi
