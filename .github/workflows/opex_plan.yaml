name: 'Run Opex Plan on API Spec Change'

on:
  pull_request:
    paths:
      - 'apps/**/openapi.yaml'
  push:
    branches:
      - main
    paths:
      - 'apps/**/openapi.yaml'

permissions:
  contents: read
  pull-requests: write

env:
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_USE_OIDC: true
  ARM_USE_AZUREAD: true
  ARM_STORAGE_USE_AZUREAD: true

jobs:
  plan:

    name: 'Turbo Plan'
    runs-on: ubuntu-latest
    environment: infra-dev-ci

    permissions:
      id-token: write
      contents: read
      pull-requests: write
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      # Corepack is an official tool by Node.js that manages package managers versions
      - name: Setup yarn
        run: corepack enable

      - name: Setup Node.js environment
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: ".node-version"
          cache: "yarn"

      - name: Install dependencies
        run: yarn --immutable
  
      - name: 'Azure CLI Login'
        uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5 # v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Run Turbo Plan
        id: turbo_plan
        continue-on-error: true
        run: |
          plan_output=$(turbo run opex:plan)
          echo "plan_output<<EOF" >> $GITHUB_OUTPUT
          echo "$plan_output" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          exit ${PIPESTATUS[0]}

      - name: Comment plan on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        with:
          script: |
            const outcome = "${{ steps.turbo_plan.outcome }}" === "success" ? "✅ Success" : "❌ Failure";
            const output = `#### \`turbo run plan\` results\n**Outcome:** ${outcome}\n\n<details><summary>Mostra il Piano Completo</summary>\n\n\`\`\`terraform\n${{ steps.turbo_plan.outputs.plan_output }}\n\`\`\`\n\n</details>\n\n*Workflow run: [${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})*`;
            github.rest.issues.createComment({ issue_number: context.issue.number, owner: context.repo.owner, repo: context.repo.repo, body: output });

      - name: Check plan status
        if: steps.turbo_plan.outcome != 'success'
        run: |
          echo "Il comando 'turbo run plan' failed."
          exit 1
  