name: Snapshot Reusable Workflow

on:
  workflow_call:
    inputs:
      pr_number:
        description: "The pull request number."
        required: true
        type: number
      distribution_type:
        description: "The type of distribution (e.g., beta, alpha)."
        required: false
        type: string
        default: "beta"
    secrets:
      gh_bot_pat:
        description: "GitHub Bot PAT for repository access."
        required: true
      npm_token:
        description: "npm token for package publishing."
        required: true

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write
  pull-requests: write

jobs:
  snapshot:
    name: Snapshot
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Node
        uses: pagopa/dx/.github/actions/node-setup@main

      - name: Install dependencies
        run: yarn install --immutable

      - name: Configure Git user
        run: |
          git config --global user.email "dx-pagopa-github-bot@pagopa.it"
          git config --global user.name "dx-pagopa-bot"

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        env:
          GITHUB_TOKEN: ${{ secrets.gh_bot_pat }}
          DISTRIBUTION_TYPE: ${{ inputs.distribution_type }}
        uses: changesets/action@c8bada60c408975afd1a20b3db81d6eee6789308 # v1.4.9
        with:
          version: yarn dlx @changesets/cli version --snapshot $DISTRIBUTION_TYPE
          publish: yarn dlx @changesets/cli publish --tag $DISTRIBUTION_TYPE
          setupGitUser: false

      - name: Comment on PR
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          PUBLISHED_ARTIFACTS: ${{ steps.changesets.outputs.publishedPackages }}
          DISTRIBUTION_TYPE: ${{ inputs.distribution_type }}
        with:
          github-token: ${{ secrets.gh_bot_pat }}
          script: |
            const issueNumber = inputs.pr_number;
            const distribution = process.env.DISTRIBUTION_TYPE;
            const publishedPackages = process.env.PUBLISHED_ARTIFACTS;

            const body = `
            ðŸš€ Snapshot Command executed.

            Distribution type: **${distribution}**

            ${publishedPackages}
            `;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body,
            });
