name: 'Run and Filter Terraform Plan'
description: 'Execute `terraform plan` and filter sensitive information from the output.'

inputs:
  base-path:
    description: 'The directory where terraform plan will be executed. (Defaults to the root of the repository)'
    required: false
    default: '.'
  sensitive-keys:
    description: 'A comma-separated list of sensitive keys to filter from the plan output.'
    required: true

outputs:
  filtered_plan:
    description: "The filtered output of the `terraform plan` command."
    value: ${{ steps.plan.outputs.filtered_plan }}

runs:
  using: "composite"
  steps:
    - name: Run Terraform Plan and Filter Output
      id: plan
      shell: bash
      run: |
        # Fail fast if no keys are provided
        if [[ -z "$SENSITIVE_KEYS" ]]; then
          echo "Error: The 'sensitive-keys' input is required."
          exit 1
        fi

        # --- Dynamically build the sed filter expressions ---
        SED_EXPRESSIONS=(sed -E)

        for key in $(echo "$SENSITIVE_KEYS" | tr ',' '\n'); do
          trimmed_key=$(echo "$key" | xargs)
          if [[ -n "$trimmed_key" ]]; then
            SED_EXPRESSIONS+=(-e "s/(\"?${trimmed_key}\"?\s*[:=]\s*)\".*?\"/\\1\"[SENSITIVE VALUE]\"/I")
          fi
        done

        echo "--- Executing Plan in: $WORKING_DIRECTORY ---"
        cd "$WORKING_DIRECTORY"

        # Run terraform plan, capture its exit code
        set +e
        FILTERED_PLAN=$(terraform plan -no-color -input=false 2>&1 | "${SED_EXPRESSIONS[@]}")
        PLAN_EXIT_CODE=${PIPESTATUS[0]}
        set -e

        echo "--- Plan executed with exit code: $PLAN_EXIT_CODE ---"

        # --- Set the action output ---
        EOF_MARKER=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c 16)
        echo "filtered_plan<<$EOF_MARKER" >> $GITHUB_OUTPUT
        cat "$FILTERED_PLAN" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "$EOF_MARKER" >> $GITHUB_OUTPUT

        # --- Handle Exit Code ---
        # The step should FAIL ONLY on a true error (exit code 1)
        # It should SUCCEED for no changes (0) and changes detected (2)
        if [[ "$PLAN_EXIT_CODE" -eq 1 ]]; then
          echo "::error::Terraform plan failed with a critical error."
          exit 1
        fi
      env:
        WORKING_DIRECTORY: ${{ inputs.base-path }}
        GITHUB_ACTION_PATH: ${{ github.action_path }}
        SENSITIVE_KEYS: ${{ inputs.sensitive-keys }}
