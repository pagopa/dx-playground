  # module.github_repository.github_actions_repository_permissions.repo will be imported
    resource "github_actions_repository_permissions" "repo" {
        allowed_actions = "all"
        enabled         = true
        id              = "dx-playground"
        repository      = "dx-playground"
    }

  # module.github_repository.github_branch_default.main will be imported
    resource "github_branch_default" "main" {
        branch     = "main"
        etag       = "W/\"e00968482048ded24c100bfae6ece3c77941a749ff452426ff5fd7ca8322831c\""
        id         = "dx-playground"
        repository = "dx-playground"
    }

  # module.github_repository.github_branch_protection.main will be created
  + resource "github_branch_protection" "main" {
      + allows_deletions                = false
      + allows_force_pushes             = false
      + enforce_admins                  = true
      + id                              = (known after apply)
      + lock_branch                     = false
      + pattern                         = "main"
      + repository_id                   = "dx-playground"
      + require_conversation_resolution = true
      + require_signed_commits          = false
      + required_linear_history         = false

      + required_pull_request_reviews {
          + dismiss_stale_reviews           = false
          + require_code_owner_reviews      = true
          + require_last_push_approval      = false
          + required_approving_review_count = 1
          + restrict_dismissals             = true
        }

      + required_status_checks {
          + strict = false
        }
    }

  # module.github_repository.github_repository.this will be updated in-place
  # (imported from "dx-playground")
  ~ resource "github_repository" "this" {
        allow_auto_merge            = true
        allow_merge_commit          = false
        allow_rebase_merge          = false
        allow_squash_merge          = true
        allow_update_branch         = true
      + archive_on_destroy          = true
        archived                    = false
        auto_init                   = false
        default_branch              = "main"
        delete_branch_on_merge      = true
        description                 = "A playground for the DevEx team"
        etag                        = "W/\"e00968482048ded24c100bfae6ece3c77941a749ff452426ff5fd7ca8322831c\""
        full_name                   = "pagopa/dx-playground"
        git_clone_url               = "git://github.com/pagopa/dx-playground.git"
        has_discussions             = false
        has_downloads               = false
        has_issues                  = false
        has_projects                = false
        has_wiki                    = false
        homepage_url                = null
        html_url                    = "https://github.com/pagopa/dx-playground"
        http_clone_url              = "https://github.com/pagopa/dx-playground.git"
        id                          = "dx-playground"
        is_template                 = false
        merge_commit_message        = "PR_TITLE"
        merge_commit_title          = "MERGE_MESSAGE"
        name                        = "dx-playground"
        node_id                     = "R_kgDONU9exQ"
        primary_language            = "TypeScript"
        private                     = false
        repo_id                     = 894394053
        squash_merge_commit_message = "PR_BODY"
        squash_merge_commit_title   = "PR_TITLE"
        ssh_clone_url               = "git@github.com:pagopa/dx-playground.git"
        svn_url                     = "https://github.com/pagopa/dx-playground"
        topics                      = [
            "dx",
            "typescript",
        ]
        visibility                  = "public"
        vulnerability_alerts        = true
        web_commit_signoff_required = false

      ~ security_and_analysis {
          + advanced_security {
              + status = "enabled"
            }
            secret_scanning {
                status = "enabled"
            }
            secret_scanning_push_protection {
                status = "enabled"
            }
        }
    }

  # module.github_repository.github_repository_environment.app_cd["dev"] will be updated in-place
  # (imported from "dx-playground:app-dev-cd")
  ~ resource "github_repository_environment" "app_cd" {
        can_admins_bypass   = true
        environment         = "app-dev-cd"
        id                  = "dx-playground:app-dev-cd"
        prevent_self_review = false
        repository          = "dx-playground"
        wait_timer          = 0

        deployment_branch_policy {
            custom_branch_policies = true
            protected_branches     = false
        }

      ~ reviewers {
            teams = [
                9588424,
            ]
          ~ users = [
              - 182747011,
            ]
        }
    }

  # module.github_repository.github_repository_environment.app_ci["dev"] will be created
  + resource "github_repository_environment" "app_ci" {
      + can_admins_bypass   = true
      + environment         = "app-dev-ci"
      + id                  = (known after apply)
      + prevent_self_review = false
      + repository          = "dx-playground"

      + deployment_branch_policy {
          + custom_branch_policies = true
          + protected_branches     = false
        }
    }

  # module.github_repository.github_repository_environment.infra_cd["dev"] will be updated in-place
  # (imported from "dx-playground:infra-dev-cd")
  ~ resource "github_repository_environment" "infra_cd" {
        can_admins_bypass   = true
        environment         = "infra-dev-cd"
        id                  = "dx-playground:infra-dev-cd"
        prevent_self_review = false
        repository          = "dx-playground"
        wait_timer          = 0

        deployment_branch_policy {
            custom_branch_policies = true
            protected_branches     = false
        }

      ~ reviewers {
            teams = [
                9588424,
            ]
          ~ users = [
              - 182747011,
            ]
        }
    }

  # module.github_repository.github_repository_environment.infra_ci["dev"] will be imported
    resource "github_repository_environment" "infra_ci" {
        can_admins_bypass = true
        environment       = "infra-dev-ci"
        id                = "dx-playground:infra-dev-ci"
        repository        = "dx-playground"
        wait_timer        = 0

        deployment_branch_policy {
            custom_branch_policies = true
            protected_branches     = false
        }
    }

  # module.github_repository.github_repository_environment.opex_cd["dev"] will be imported
    resource "github_repository_environment" "opex_cd" {
        can_admins_bypass   = true
        environment         = "opex-dev-cd"
        id                  = "dx-playground:opex-dev-cd"
        prevent_self_review = false
        repository          = "dx-playground"
        wait_timer          = 0

        deployment_branch_policy {
            custom_branch_policies = true
            protected_branches     = false
        }

        reviewers {
            teams = [
                9588424,
            ]
            users = []
        }
    }

  # module.github_repository.github_repository_environment.opex_ci["dev"] will be imported
    resource "github_repository_environment" "opex_ci" {
        can_admins_bypass = true
        environment       = "opex-dev-ci"
        id                = "dx-playground:opex-dev-ci"
        repository        = "dx-playground"
        wait_timer        = 0

        deployment_branch_policy {
            custom_branch_policies = true
            protected_branches     = false
        }
    }

  # module.github_repository.github_repository_environment_deployment_policy.app_cd_branch["dev-main"] will be created
  + resource "github_repository_environment_deployment_policy" "app_cd_branch" {
      + branch_pattern = "main"
      + environment    = "app-dev-cd"
      + id             = (known after apply)
      + repository     = "dx-playground"
    }

  # module.github_repository.github_repository_environment_deployment_policy.infra_cd_branch["dev-main"] will be created
  + resource "github_repository_environment_deployment_policy" "infra_cd_branch" {
      + branch_pattern = "main"
      + environment    = "infra-dev-cd"
      + id             = (known after apply)
      + repository     = "dx-playground"
    }

  # module.github_repository.github_repository_environment_deployment_policy.opex_cd_branch["dev-main"] will be created
  + resource "github_repository_environment_deployment_policy" "opex_cd_branch" {
      + branch_pattern = "main"
      + environment    = "opex-dev-cd"
      + id             = (known after apply)
      + repository     = "dx-playground"
    }

  # module.github_repository.null_resource.workflow_permissions will be created
  + resource "null_resource" "workflow_permissions" {
      + id       = (known after apply)
      + triggers = {
          + "repo" = "pagopa/dx-playground"
        }
    }

Plan: 8 to import, 6 to add, 3 to change, 0 to destroy.

Changes to Outputs:
  + repository_id   = "dx-playground"
  + repository_name = "dx-playground"

─────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
